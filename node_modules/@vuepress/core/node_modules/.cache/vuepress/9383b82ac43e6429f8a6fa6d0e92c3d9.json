{"remainingRequest":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/chenyu/Desktop/WebLearnBasic/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/chenyu/Desktop/WebLearnBasic/docs/javascript/README.md?vue&type=template&id=3b4fc7d3&","dependencies":[{"path":"/Users/chenyu/Desktop/WebLearnBasic/docs/javascript/README.md","mtime":1554515361846},{"path":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/cache-loader/dist/cjs.js","mtime":1542345792985},{"path":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1553779317815},{"path":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/cache-loader/dist/cjs.js","mtime":1542345792985},{"path":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/vue-loader/lib/index.js","mtime":1553779317815},{"path":"/Users/chenyu/Desktop/WebLearnBasic/node_modules/@vuepress/markdown-loader/index.js","mtime":1554501491577}],"contextDependencies":[],"result":["\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"第一天-基础篇\"><a class=\"header-anchor\" href=\"#第一天-基础篇\" aria-hidden=\"true\">#</a> 第一天-基础篇</h1>\n<h2 id=\"浏览器内核\"><a class=\"header-anchor\" href=\"#浏览器内核\" aria-hidden=\"true\">#</a> 浏览器内核</h2>\n<ul>\n<li>\n<p>浏览器中 <strong>识别代码</strong> + <strong>绘制页面</strong> 的东西 叫做 <strong>内核</strong></p>\n</li>\n<li>\n<p>编写HTML.CSS.JAVASCRIPT代码 要遵循W3C规范（W3C规范制订者，有多种规范）</p>\n</li>\n<li>\n<p>浏览器就是按照W3C规范，识别HTMl.CSS.JAVASCRIPT，并绘制出来</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>浏览器</th>\n<th>内核</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Chrome 谷歌浏览器</td>\n<td>webKit</td>\n</tr>\n<tr>\n<td>FireFox  火狐浏览器</td>\n<td>Gecko</td>\n</tr>\n<tr>\n<td>Opera     欧朋浏览器</td>\n<td>Presto</td>\n</tr>\n<tr>\n<td>IE       浏览器</td>\n<td>Trident</td>\n</tr>\n<tr>\n<td>Safari   苹果浏览器+大部分国产以及手机浏览器</td>\n<td>WebKit</td>\n</tr>\n<tr>\n<td>Edge   浏览器</td>\n<td>edgehtml</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"浏览器兼容性\"><a class=\"header-anchor\" href=\"#浏览器兼容性\" aria-hidden=\"true\">#</a> 浏览器兼容性</h2>\n<ul>\n<li>W3C发布的规范，是开发者不断尝试总结出来的</li>\n<li>各类厂商的浏览器，不平行，或者不按标准来</li>\n</ul>\n<h2 id=\"导入js的三种方式\"><a class=\"header-anchor\" href=\"#导入js的三种方式\" aria-hidden=\"true\">#</a> 导入JS的三种方式</h2>\n<h3 id=\"行内倒入-不要使用\"><a class=\"header-anchor\" href=\"#行内倒入-不要使用\" aria-hidden=\"true\">#</a> 行内倒入-不要使用</h3>\n<ul>\n<li>在HTML标签的 <strong>属性</strong> 里通过<strong>事件</strong>调用js代码</li>\n<li>不安全，可伪注入恶意代码</li>\n</ul>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token operator\">&lt;</span>div onclick<span class=\"token operator\">=</span><span class=\"token string\">\"alert('hello world')\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>   <span class=\"token comment\">//div标签  </span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"内嵌倒入\"><a class=\"header-anchor\" href=\"#内嵌倒入\" aria-hidden=\"true\">#</a> 内嵌倒入</h3>\n<ul>\n<li>通过 script 标签 直接将js代码写在HTML里面</li>\n</ul>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"外链倒入\"><a class=\"header-anchor\" href=\"#外链倒入\" aria-hidden=\"true\">#</a> 外链倒入</h3>\n<ul>\n<li>通常 倒入js标签 放到body最底部，等元素标签全都加载完再通过加载js并通过js操作元素，css放到顶部head里</li>\n</ul>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"script.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>   <span class=\"token comment\">//写法  </span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"js常用的输出格式\"><a class=\"header-anchor\" href=\"#js常用的输出格式\" aria-hidden=\"true\">#</a> JS常用的输出格式</h2>\n<h3 id=\"alert\"><a class=\"header-anchor\" href=\"#alert\" aria-hidden=\"true\">#</a> <strong>Alert ()</strong></h3>\n<p>警告<a href=\"https://translate.google.cn/#view=home&amp;op=translate&amp;sl=en&amp;tl=zh-CN&amp;text=confirm\" target=\"_blank\" rel=\"noopener noreferrer\">读法 əˈlərt<OutboundLink/></a></p>\n<ul>\n<li>类型：弹出框</li>\n<li>确定按钮值：<code>&quot;Ture&quot;</code> 字符串</li>\n</ul>\n<p>在浏览器里弹出一个框，（提供一个确定按钮，点击确定弹框消失）点击<strong>确定</strong>返回值为：<strong>Ture</strong></p>\n<p>输出内容转换成字符串因为调用了 <strong>toString</strong> 这个方法 <strong>结果都是字符串</strong></p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">=</span><span class=\"token string\">'liubei'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//=>  \"[object Object]\"</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//=> \"12,12\"</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"confirm\"><a class=\"header-anchor\" href=\"#confirm\" aria-hidden=\"true\">#</a> Confirm()</h3>\n<p>确认<a href=\"https://translate.google.cn/#view=home&amp;op=translate&amp;sl=en&amp;tl=zh-CN&amp;text=confirm\" target=\"_blank\" rel=\"noopener noreferrer\">读法 kənˈfərm<OutboundLink/></a></p>\n<ul>\n<li>类型：弹出框</li>\n<li>确定按钮值：<code>&quot;Ture&quot;</code> 字符串</li>\n<li>取消按钮值：<code>&quot;Fals&quot;</code> 字符串</li>\n</ul>\n<p>在 Alert() 的基础上增加了 <strong>取消</strong> 按钮 点击<strong>取消</strong> 返回值为<strong>false</strong></p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ol>\n<li>\n<p>阅读下列代码;将 confirm() 赋予给变量 hello 通过alert()接受 hello 并将 hello的值输出</p>\n</li>\n<li>\n<p>当用户分别点击 <strong>确定</strong> 和 <strong>取消</strong> 按钮后的 返回的值分别为 true 和 false</p>\n</li>\n<li>\n<p>可根据接受的结果做不同的处理 ；  不普遍，但系统类项目用的多</p>\n</li>\n</ol>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> hello <span class=\"token operator\">=</span> <span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"prompt\"><a class=\"header-anchor\" href=\"#prompt\" aria-hidden=\"true\">#</a> Prompt()</h3>\n<p>提示<a href=\"https://translate.google.cn/#view=home&amp;op=translate&amp;sl=en&amp;tl=zh-CN&amp;text=Prompt\" target=\"_blank\" rel=\"noopener noreferrer\">读法<OutboundLink/></a></p>\n<ul>\n<li>类型：弹出框</li>\n<li>不输入内容确定按钮值：<code>空</code>字符串</li>\n<li>输入内容确定按钮值：<code>&quot;String&quot;</code>字符串</li>\n<li>取消按钮值：<code>&quot;Null&quot;</code>  字符串</li>\n</ul>\n<p>在confirm()的基础上 增加输入框</p>\n<p>输入内容点击 <strong>确定</strong> 返回值为：输入的内容</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"注意\"><a class=\"header-anchor\" href=\"#注意\" aria-hidden=\"true\">#</a> 注意</h3>\n<ol>\n<li>三个常用输出方式 输出的值都为 <strong>字符串</strong></li>\n<li>真是项目几乎不用，通常提示框都是右自己封装的插件和组件实现，不用内置，因为网站样式需要精美</li>\n</ol>\n<h2 id=\"浏览器控制台\"><a class=\"header-anchor\" href=\"#浏览器控制台\" aria-hidden=\"true\">#</a> 浏览器控制台</h2>\n<h3 id=\"简介\"><a class=\"header-anchor\" href=\"#简介\" aria-hidden=\"true\">#</a> 简介</h3>\n<p>方便开发人员进行调试 默认浏览器为Chrome</p>\n<h3 id=\"调用\"><a class=\"header-anchor\" href=\"#调用\" aria-hidden=\"true\">#</a> 调用</h3>\n<ul>\n<li>Mac: Option + Command + J</li>\n<li>Windows: F12 或者 Control + Alt + J</li>\n</ul>\n<h3 id=\"面板\"><a class=\"header-anchor\" href=\"#面板\" aria-hidden=\"true\">#</a> 面板</h3>\n<h4 id=\"elements\"><a class=\"header-anchor\" href=\"#elements\" aria-hidden=\"true\">#</a> Elements</h4>\n<ul>\n<li>记录了当前页面的所用HTML元素结构 和 样式 可随意调整</li>\n</ul>\n<h4 id=\"console\"><a class=\"header-anchor\" href=\"#console\" aria-hidden=\"true\">#</a> Console</h4>\n<p>调试 解决Bug 都在这里， 看各种网站养成习惯在Console里查看 职业习惯，ps可能里面有入职邀请函</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//在控制台输出，不会转换数据类型，输出什么格式就转换什么格式</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">:</span><span class=\"token string\">'张飞'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//=> {name:'张飞'}</span>\n<span class=\"token operator\">==</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//比log更详细一点</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//把json数据展示为一个表格</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向页面输出html内容 几乎不用</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h4 id=\"source\"><a class=\"header-anchor\" href=\"#source\" aria-hidden=\"true\">#</a> Source</h4>\n<ul>\n<li>所有用到的 HTML CSS JAVASCRIPT 源代码</li>\n<li>参考大型网站的js 源码，用的的可 保存 下载借鉴使用</li>\n</ul>\n<h4 id=\"network\"><a class=\"header-anchor\" href=\"#network\" aria-hidden=\"true\">#</a> Network</h4>\n<ul>\n<li>每个资源加载时间 成功与否</li>\n<li>性能优化用的</li>\n</ul>\n<h2 id=\"js变量与常量\"><a class=\"header-anchor\" href=\"#js变量与常量\" aria-hidden=\"true\">#</a> JS变量与常量</h2>\n<h3 id=\"javascript\"><a class=\"header-anchor\" href=\"#javascript\" aria-hidden=\"true\">#</a> JavaScript</h3>\n<blockquote>\n<p>ECMAScript(ES):规定了JS的一些基础核心知识 （变量，数据类型，语法规范，操作语句）</p>\n<p>先学ES3/5 再学ES6/7</p>\n</blockquote>\n<blockquote>\n<p>DOM: document object model 文档对象模型，里面提供了一些属性和方法，可以让我操纵页面中的元素</p>\n</blockquote>\n<h3 id=\"变量与常量\"><a class=\"header-anchor\" href=\"#变量与常量\" aria-hidden=\"true\">#</a> 变量与常量</h3>\n<blockquote>\n<p>变量：值是可以变的</p>\n</blockquote>\n<blockquote>\n<p>常量：值是不可以变的</p>\n</blockquote>\n<h3 id=\"变量写法\"><a class=\"header-anchor\" href=\"#变量写法\" aria-hidden=\"true\">#</a> 变量写法</h3>\n<p>var 声明变量  name变量名 =赋予 123值；堆 和 栈 （Es6 用let）</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> liubei<span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></ContentSlotsDistributor>\n",null]}